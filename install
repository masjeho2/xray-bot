#!/bin/bash

# =================================================================
# Skrip Instalasi Server Xray, HAProxy, dan Bot
#
# Deskripsi:
# Skrip ini mengotomatiskan penyiapan server proxy dengan Xray,
# menggunakan HAProxy sebagai reverse proxy, dan menyertakan
# bot Telegram untuk manajemen.
#
# Versi: 1.1 (Refactored)
# =================================================================

# Hentikan eksekusi jika terjadi kesalahan
set -e

# --- [BAGIAN 1: PENGATURAN AWAL & VARIABEL] ---

# Variabel Warna untuk output
NC='\e[0m'
DEFBOLD='\e[39;1m'
RB='\e[31;1m'
GB='\e[32;1m'
YB='\e[33;1m'
BB='\e[34;1m'
WB='\e[37;1m'

# Variabel Konfigurasi
GITHUB_REPO="raw.githubusercontent.com/masjeho2"
XRAY_BOT_REPO_V1="${GITHUB_REPO}/xray-bot/v1"
CONF_REPO="${GITHUB_REPO}/conf/main"
MENU_REPO="${GITHUB_REPO}/v1/xray"

# Catat waktu mulai
start_time=$(date +%s)

# Fungsi untuk menampilkan pesan dengan format
log_message() {
    local type="$1"
    local message="$2"
    case "$type" in
        "INFO") color="$GB" ;;
        "WARN") color="$YB" ;;
        "ERROR") color="$RB" ;;
        *) color="$NC" ;;
    esac
    echo -e "${color}[ ${type} ]${NC} ${WB}${message}${NC}"
}

# Fungsi untuk menghitung dan menampilkan durasi instalasi
secs_to_human() {
    local total_secs=$1
    local hours=$((total_secs / 3600))
    local minutes=$(((total_secs / 60) % 60))
    local seconds=$((total_secs % 60))
    log_message "INFO" "Total waktu instalasi: ${hours} jam, ${minutes} menit, ${seconds} detik."
}

# --- [BAGIAN 2: FUNGSI-FUNGSI INSTALASI] ---

# Fungsi untuk memperbarui sistem dan paket
update_system() {
    log_message "INFO" "Memulai pembaruan sistem..."
    apt-get update -y
    apt-get full-upgrade -y
    apt-get dist-upgrade -y
    apt-get autoremove -y
    log_message "INFO" "Pembaruan sistem selesai."
}

# Fungsi untuk menginstal dependensi yang dibutuhkan
install_dependencies() {
    log_message "INFO" "Menginstal dependensi yang diperlukan..."
    apt-get install -y socat curl screen cron screenfetch netfilter-persistent vnstat lsof fail2ban sysstat jq gnupg software-properties-common lolcat
    log_message "INFO" "Instalasi dependensi selesai."
}

# Fungsi untuk membuat direktori yang diperlukan
setup_directories() {
    log_message "INFO" "Membuat direktori yang diperlukan..."
    mkdir -p /backup /user /var/www/html/{vmess,vless,trojan,shadowsocks,shadowsocks2022,socks5,allxray} /usr/local/etc/xray/{adminenv,agenenv} /etc/haproxy/certs
}

# Fungsi untuk instalasi dan konfigurasi Xray
setup_xray() {
    log_message "INFO" "Memulai instalasi dan konfigurasi Xray..."

    # Instal Xray Core
    bash -c "$(curl -L https://github.com/XTLS/Xray-install/raw/main/install-release.sh)" - install --beta
    
    # Backup Xray binary asli
    cp /usr/local/bin/xray /backup/xray.official.backup
    
    # Ambil informasi Geo
    curl -s ipinfo.io/city > /usr/local/etc/xray/city
    curl -s ipinfo.io/org | cut -d " " -f 2-10 > /usr/local/etc/xray/org
    curl -s ipinfo.io/timezone > /usr/local/etc/xray/timezone
    
    # Download GeoIP & GeoSite data
    log_message "INFO" "Mengunduh file GeoIP dan GeoSite..."
    curl -L -o /usr/local/share/xray/geoip.dat https://github.com/malikshi/v2ray-rules-dat/releases/latest/download/geoip.dat
    curl -L -o /usr/local/share/xray/geosite.dat https://github.com/malikshi/v2ray-rules-dat/releases/latest/download/geosite.dat
    
    log_message "INFO" "Instalasi Xray selesai."
}

# Fungsi untuk instalasi software server lainnya (HAProxy, MongoDB, Node.js)
install_server_software() {
    log_message "INFO" "Menginstal HAProxy, MongoDB Tools, dan Node.js..."

    # Setup Timezone
    ln -fs /usr/share/zoneinfo/Asia/Jakarta /etc/localtime

    # Instal HAProxy
    add-apt-repository ppa:vbernat/haproxy-2.8 -y
    apt-get update
    apt-get install -y haproxy

    # Instal MongoDB Database Tools
    curl -fsSL https://pgp.mongodb.com/server-7.0.asc | gpg --dearmor -o /usr/share/keyrings/mongodb-server-7.0.gpg
    echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu $(lsb_release -cs)/mongodb-org/7.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-7.0.list
    apt-get update
    apt-get install -y mongodb-database-tools

    # Instal Node.js
    curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
    apt-get install -y nodejs
    
    log_message "INFO" "Instalasi software server selesai."
}

# Fungsi untuk konfigurasi domain dan SSL
configure_domain_and_ssl() {
    log_message "INFO" "Memulai konfigurasi domain dan sertifikat SSL..."
    
    # Hapus file web default
    rm -f /var/www/html/*.html
    
    # Minta input domain dari pengguna
    read -rp "Masukkan domain Anda: " dns
    if [ -z "$dns" ]; then
        log_message "ERROR" "Tidak ada domain yang dimasukkan. Proses dibatalkan."
        exit 1
    else
        echo "$dns" > /usr/local/etc/xray/domain
        echo "DNS=$dns" > /var/lib/dnsvps.conf
        log_message "INFO" "Domain '$dns' berhasil disimpan."
    fi
    
    local domain=$(cat /usr/local/etc/xray/domain)

    # Issue SSL Certificate menggunakan acme.sh
    log_message "INFO" "Menerbitkan sertifikat SSL untuk domain ${domain}..."
    systemctl stop haproxy
    curl https://get.acme.sh | sh
    source ~/.bashrc
    ~/.acme.sh/acme.sh --issue -d "$domain" --server letsencrypt --keylength ec-256 --fullchain-file /usr/local/etc/xray/fullchain.crt --key-file /usr/local/etc/xray/private.key --standalone --force
    
    # Gabungkan sertifikat untuk HAProxy
    cat /usr/local/etc/xray/fullchain.crt /usr/local/etc/xray/private.key > /etc/haproxy/certs/domain.pem
    log_message "INFO" "Sertifikat SSL berhasil dibuat dan dikonfigurasi untuk HAProxy."
}

# Fungsi untuk mengunduh file-file konfigurasi
download_configurations() {
    log_message "INFO" "Mengunduh file konfigurasi untuk Xray, HAProxy, dan Bot..."
    
    # Konfigurasi Xray dan HAProxy
    wget -q -O /usr/local/etc/xray/config.json "${XRAY_BOT_REPO_V1}/config.json"
    wget -q -O /etc/haproxy/haproxy.cfg "${XRAY_BOT_REPO_V1}/haproxy.cfg"
    wget -q -O /var/www/html/robots.txt "${CONF_REPO}/robots.txt"
    
    # Konfigurasi Bot
    wget -q -O /usr/local/etc/xray/package.json "${XRAY_BOT_REPO_V1}/package.json"
    wget -q -O /usr/local/etc/xray/adminenv/.env "${XRAY_BOT_REPO_V1}/adminenv/.env"
    wget -q -O /usr/local/etc/xray/agenenv/.env "${XRAY_BOT_REPO_V1}/agenenv/.env"
    
    # Binary Bot
    wget -q -O /usr/local/etc/xray/bot-admin https://github.com/masjeho2/xray-bot/releases/latest/download/bot-admin
    wget -q -O /usr/local/etc/xray/bot-agent https://github.com/masjeho2/xray-bot/releases/latest/download/bot-agent
    
    log_message "INFO" "Semua file konfigurasi berhasil diunduh."
}

# Fungsi untuk tuning sistem (Firewall dan Kernel)
tune_system_performance() {
    log_message "INFO" "Melakukan tuning performa sistem (Firewall & Kernel)..."

    # Konfigurasi Firewall (iptables) untuk blokir torrent
    log_message "INFO" "Menambahkan aturan iptables untuk memblokir trafik torrent."
    IPTABLES_RULES=(
        "get_peers" "announce_peer" "find_node" ".torrent"
        "announce.php?passkey=" "torrent" "announce" "info_hash"
        "BitTorrent" "BitTorrent protocol" "peer_id="
    )
    for rule in "${IPTABLES_RULES[@]}"; do
        iptables -A FORWARD -m string --string "$rule" --algo bm -j DROP
    done
    iptables-save > /etc/iptables.up.rules
    netfilter-persistent save
    netfilter-persistent reload

    # Konfigurasi Batas Sistem (limits.conf)
    log_message "INFO" "Meningkatkan batas sistem (ulimit)."
    cat > /etc/security/limits.conf << END
* soft nofile 1000000
* hard nofile 1000000
* soft nproc 1000000
* hard nproc 1000000
END
    grep -q '^session\s\+required\s\+pam_limits.so' /etc/pam.d/common-session || echo "session required pam_limits.so" >> /etc/pam.d/common-session
    grep -q '^session\s\+required\s\+pam_limits.so' /etc/pam.d/common-session-noninteractive || echo "session required pam_limits.so" >> /etc/pam.d/common-session-noninteractive
    ulimit -n 1000000
    ulimit -u 100000

    # Tuning Kernel (sysctl.conf)
    log_message "INFO" "Melakukan tuning parameter kernel (sysctl)."
    cat > /etc/sysctl.conf << END
# Tuning by Auto-Installer
net.core.default_qdisc=fq
net.ipv4.tcp_congestion_control=bbr
fs.file-max = 1000000
fs.inotify.max_user_instances = 8192
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_tw_reuse = 1
net.ipv4.ip_local_port_range = 1024 65000
net.ipv4.tcp_max_syn_backlog = 16384
net.ipv4.tcp_max_tw_buckets = 6000
net.ipv4.route.gc_timeout = 100
net.ipv4.tcp_syn_retries = 1
net.ipv4.tcp_synack_retries = 1
net.core.somaxconn = 32768
net.core.netdev_max_backlog = 32768
net.ipv4.tcp_timestamps = 0
net.ipv4.tcp_max_orphans = 32768
net.ipv4.ip_forward = 1
END
    sysctl -p
    log_message "INFO" "Tuning performa sistem selesai."
}

# Fungsi untuk membuat layanan systemd
setup_systemd_services() {
    log_message "INFO" "Membuat layanan systemd untuk bot..."
    
    # Layanan Bot Admin
    cat > /etc/systemd/system/bot-admin.service << END
[Unit]
Description=Bot Admin Service
After=network.target

[Service]
ExecStart=/usr/local/etc/xray/bot-admin
Restart=always
RestartSec=5
User=root

[Install]
WantedBy=multi-user.target
END

    # Layanan Bot Agent
    cat > /etc/systemd/system/bot-agent.service << END
[Unit]
Description=Bot Agent Service
After=network.target

[Service]
ExecStart=/usr/local/etc/xray/bot-agent
Restart=always
RestartSec=5
User=root

[Install]
WantedBy=multi-user.target
END

    log_message "INFO" "Pembuatan layanan systemd selesai."
}

# Fungsi untuk mengunduh skrip menu
download_menu_scripts() {
    log_message "INFO" "Mengunduh skrip-skrip menu..."
    
    local scripts=(
        "menu:menu/menu.sh"
        "dns:other/dns.sh"
        "certxray:other/certxray.sh"
        "xraymod:other/xraymod.sh"
        "xrayofficial:other/xrayofficial.sh"
        "about:other/about.sh"
        "clear-log:other/clear-log.sh"
    )
    
    for script_info in "${scripts[@]}"; do
        local filename="${script_info%%:*}"
        local filepath="${script_info#*:}"
        wget -q -O "/usr/bin/${filename}" "${MENU_REPO}/${filepath}"
    done
    
    log_message "INFO" "Pengunduhan skrip menu selesai."
}

# Fungsi untuk menyelesaikan instalasi (izin, cron, profil)
finalize_installation() {
    log_message "INFO" "Menyelesaikan tahap akhir instalasi..."
    
    # Atur izin eksekusi
    log_message "INFO" "Mengatur izin file (chmod)..."
    chmod +x /usr/local/etc/xray/bot-admin
    chmod +x /usr/local/etc/xray/bot-agent
    chmod +x /usr/bin/{menu,dns,certxray,xraymod,xrayofficial,about,clear-log}
    
    # Atur cron jobs
    log_message "INFO" "Menambahkan jadwal tugas (cron jobs)..."
    cat > /etc/crontab << END
SHELL=/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

*/5 * * * * root clear-log
*/3 * * * * root truncate -s 0 /var/log/xray/access.log
0 0 */7 * * root truncate -s 0 /var/log/xray-admin-mongo.log
0 1 * * 1 root curl -L -o /usr/local/share/xray/geoip.dat https://github.com/malikshi/v2ray-rules-dat/releases/latest/download/geoip.dat && curl -L -o /usr/local/share/xray/geosite.dat https://github.com/malikshi/v2ray-rules-dat/releases/latest/download/geosite.dat && systemctl restart xray
END
    
    # Instal dependensi Node.js
    log_message "INFO" "Menginstal dependensi Node.js (npm)..."
    cd /usr/local/etc/xray
    npm install
    npm install -g pm2
    cd
    
    # Atur profil root
    log_message "INFO" "Mengonfigurasi profil shell untuk root..."
    cat > /root/.profile << END
# ~/.profile: executed by the command interpreter for login shells.
if [ "\$BASH" ]; then
    if [ -f ~/.bashrc ]; then
        . ~/.bashrc
    fi
fi
mesg n || true
clear
neofetch
echo ""
echo "Instalasi selesai. Silakan ketik 'menu' untuk menampilkan opsi."
END
    chmod 644 /root/.profile
    
    # Reload, enable, dan restart layanan
    log_message "INFO" "Mengaktifkan dan merestart semua layanan terkait..."
    systemctl daemon-reload
    systemctl enable cron bot-admin bot-agent haproxy xray
    systemctl restart cron haproxy xray
    # systemctl start bot-admin bot-agent # Mungkin lebih baik dimulai setelah reboot
    
    log_message "INFO" "Penyelesaian instalasi selesai."
}

# Fungsi untuk menampilkan ringkasan instalasi
display_summary() {
    clear
    echo ""
    echo -e "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" | lolcat -a -d 5
    echo -e "                 ${WB}INSTALASI SCRIPT SELESAI${NC}                "
    echo -e "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" | lolcat -a -d 5
    echo ""
    echo -e "  ${WB}»»» Layanan Protokol «««   |  »»» Protokol Jaringan «««${NC}  "
    echo -e "  ───────────────────────────  |  ───────────────────────────"
    echo -e "  ${YB}- Vless${NC}                    ${WB}|${NC}  ${YB}- Websocket (CDN) non TLS${NC}"
    echo -e "  ${YB}- Vmess${NC}                    ${WB}|${NC}  ${YB}- Websocket (CDN) TLS${NC}"
    echo -e "  ${YB}- Trojan${NC}                   ${WB}|${NC}  ${YB}- gRPC (CDN) TLS${NC}"
    echo ""
    echo -e "               ${WB}»»» Port Jaringan Aktif «««${NC}             "
    echo -e "  ───────────────────────────────────────────────────────────"
    echo -e "  ${YB}- HTTPS : 443 ${NC}"
    echo -e "  ${YB}- HTTP  : 80 ${NC}"
    echo -e "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" | lolcat -a -d 5
    echo ""
}

# --- [BAGIAN 3: EKSEKUSI UTAMA] ---

main() {
    # Hapus file instalasi lama jika ada
    rm -f install
    clear

    # Jalankan semua fungsi secara berurutan
    update_system
    install_dependencies
    setup_directories
    setup_xray
    install_server_software
    configure_domain_and_ssl
    download_configurations
    tune_system_performance
    setup_systemd_services
    download_menu_scripts
    finalize_installation
    display_summary

    # Hapus file skrip ini setelah selesai
    rm -f "$0"
    
    # Tampilkan durasi total
    secs_to_human "$(($(date +%s) - start_time))"
    
    # Minta konfirmasi untuk reboot
    echo ""
    read -rp $'\e[33;1m[ PERINGATAN ]\e[0m \e[37;1mApakah Anda ingin me-reboot server sekarang? (Y/N): \e[0m' answer
    if [[ "$answer" =~ ^[Yy]$ ]]; then
        log_message "INFO" "Server akan di-reboot dalam 5 detik..."
        sleep 5
        reboot
    else
        log_message "INFO" "Reboot dibatalkan. Silakan reboot secara manual nanti."
        exit 0
    fi
}

# Panggil fungsi utama untuk memulai eksekusi
main
